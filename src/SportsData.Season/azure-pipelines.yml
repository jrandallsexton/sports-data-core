trigger:
  branches:
    include:
      - main
      - test/*
  paths:
    include:
      - 'src/SportsData.Season/*'

# Centralized agent and demand config for all stages/jobs
pool:
  name: Default
  demands:
    - Agent.Name -equals Bender

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '805d6790-3b89-43f4-8551-f1a6b1c8f2f0'
  imageRepository: 'sportsdataseason'
  containerRegistry: 'sportdeets.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/src/DockerfileSeason'
  tag: '$(Build.BuildId)'

  # Build Solution Vars
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  Major: '0'
  Minor: '0'
  Patch: '1'
  PackageVersion: '0.0.1'

  # Deploy Vars
  azureSubscription: 'dev-sports-data-api-svc-conn'
  appName: 'sportdeets-season-dev'

stages:
- stage: BuildAndTest
  displayName: "Build & Test: Season"
  jobs:
    - job: BuildAndTest
      displayName: BuildAndTest
      steps:
        - task: UseDotNet@2
          displayName: 'Use .NET 9 SDK'
          inputs:
            packageType: 'sdk'
            version: '9.0.x'
            includePreviewVersions: true

        - task: NuGetCommand@2
          displayName: 'NuGet Restore'
          inputs:
            command: 'restore'
            restoreSolution: '**/sports-data-season.sln'
            feedsToUse: 'select'
            vstsFeed: '2bb0cd0d-fa6e-42f0-9b7e-9cc1ce065e55/de94ed5a-8390-4547-bdd9-f975a712aa70'
    
        - task: MSBuild@1
          displayName: 'Build sports-data-season solution'
          inputs:
            solution: '**\sports-data-season.sln'
            msbuildArchitecture: 'x64'
            clean: true
            platform: '$(buildPlatform)'
            configuration: '$(buildConfiguration)'
            msbuildArguments: '/t:Restore'

        - task: DotNetCoreCLI@2
          displayName: 'Run Unit Tests'
          inputs:
            command: 'test'
            projects: '**/SportsData.Season.Tests.Unit.csproj'
            testRunTitle: 'season-tests-unit'

- stage: BuildImagePushACR
  displayName: Build Image & Push to ACR
  dependsOn: BuildAndTest
  jobs:
  - job: BuildImage
    displayName: 'Build and Push Image'
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: DeployToAppService
  displayName: 'Deploy: API to Azure App Service'
  dependsOn: BuildImagePushACR
  condition: succeeded()
  jobs:
    - job: Deploy
      displayName: 'Deploy container to Azure Web App'
      steps:
        - task: AzureWebAppContainer@1
          displayName: 'Deploy to Azure Web App (Container)'
          inputs:
            azureSubscription: $(azureSubscription)
            appName: $(appName)
            containers: |
              $(containerRegistry)/$(imageRepository):$(tag)