# Use the official ASP.NET Core runtime as a base for final app
FROM mcr.microsoft.com/dotnet/aspnet:9.0-alpine AS base
WORKDIR /app
EXPOSE 8080
EXPOSE 8081

# Install ICU and enable full globalization
RUN apk add --no-cache icu-libs \
    && echo "DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false" >> /etc/environment
ENV DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false

# Build stage
FROM mcr.microsoft.com/dotnet/sdk:9.0-alpine AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src

# Only copy the project files needed
COPY ../SportsData.Provider/SportsData.Provider.csproj SportsData.Provider/
COPY ../SportsData.Core/SportsData.Core.csproj SportsData.Core/

# Restore dependencies
RUN dotnet restore "SportsData.Provider/SportsData.Provider.csproj"

# Now copy the actual source code
COPY ../SportsData.Provider/ SportsData.Provider/
COPY ../SportsData.Core/ SportsData.Core/

# Build the project
WORKDIR /src/SportsData.Provider
RUN dotnet build "SportsData.Provider.csproj" -c $BUILD_CONFIGURATION -o /app/build

# Publish the project
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "SportsData.Provider.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# Final runtime image
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .

ENTRYPOINT ["dotnet", "SportsData.Provider.dll", "-mode", "FootballNcaa"]
